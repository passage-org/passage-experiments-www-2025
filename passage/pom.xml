<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
		             http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>fr.gdd</groupId>
  <artifactId>passage</artifactId>
  <packaging>pom</packaging>
  <version>0.0.1</version>


  <distributionManagement>
    <site>
      <id>${project.artifactId}-site</id>
      <url>${project.baseUri}</url>
    </site>
  </distributionManagement>

  <modules>
    <module>jena-utils</module>
    <module>passage-commons</module>
    <module>passage-databases</module>
    <module>passage-blazegraph</module>
    <!-- <module>passage-hdt</module> --> <!-- uncomment when issue_#7 is solved --> 
    <module>passage-volcano</module>
    <module>passage-cli</module>
    <!-- <module>raw-tdb2</module> -->
    <module>raw</module>
    <module>raw-cli</module>
  </modules>

  <properties>
    <!-- For now, shared version by all submodules. Unfortunately ${revision} in
     children
     does not work well… For instance, `mvn exec:java -pl sage-jena-module`
     look for sage-jena:pom:${revision} instead of sage-jena:pom:0.0.1 Thus
     fails. Hardcoded version of parent works… -->
    <!-- <revision>0.0.1</revision> -->
    <hdt.version>3.0.10</hdt.version>
    <junit.version>5.11.1</junit.version>
    <jena.version>5.0.0</jena.version> <!-- for some reason, 5.1.0 makes tests not discoverable to intellij... -->
    <slf4j.version>2.0.6</slf4j.version>
    <args4j.version>2.33</args4j.version>
    <common.compress.version>1.23.0</common.compress.version>
    <blazegraph.version>2.1.4</blazegraph.version>
    <guava.version>33.1.0-jre</guava.version>
    <apache.lang3.version>3.17.0</apache.lang3.version>
    <picocli.version>4.7.6</picocli.version>
    <stax.version>1.2.0</stax.version>

    <maven.surefire.version>3.5.0</maven.surefire.version>
    <maven.compiler.version>3.10.1</maven.compiler.version>
    <maven.compiler.release>21</maven.compiler.release>
    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>
    <maven.javadoc.plugin>3.5.0</maven.javadoc.plugin>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- module versions -->
      <dependency>
        <groupId>fr.gdd</groupId>
        <artifactId>jena-utils</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>fr.gdd</groupId>
        <artifactId>passage-commons</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>fr.gdd</groupId>
        <artifactId>passage-databases</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>fr.gdd</groupId>
        <artifactId>passage-blazegraph</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>fr.gdd</groupId>
        <artifactId>passage-volcano</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>fr.gdd</groupId>
        <artifactId>passage-cli</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>fr.gdd</groupId>
        <artifactId>raw</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>fr.gdd</groupId>
        <artifactId>raw-cli</artifactId>
        <version>${project.version}</version>
      </dependency>

      <!-- actual dependencies -->
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency> <!-- because blazegraph uses junit4 while we use junit5… -->
        <groupId>org.junit.vintage</groupId>
        <artifactId>junit-vintage-engine</artifactId>
        <scope>test</scope>
        <version>${junit.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.jena</groupId>
        <artifactId>apache-jena-libs</artifactId>
        <version>${jena.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.apache.jena</groupId>
        <artifactId>jena-fuseki-webapp</artifactId>
        <version>${jena.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.jena</groupId>
        <artifactId>jena-fuseki-core</artifactId>
        <version>${jena.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.jena</groupId>
        <artifactId>jena-fuseki-main</artifactId>
        <version>${jena.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.jena</groupId>
        <artifactId>jena-arq</artifactId>
        <version>${jena.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.jena</groupId>
        <artifactId>jena-base</artifactId>
        <version>${jena.version}</version>
      </dependency>

      <dependency> <!-- logger for jena -->
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.rdfhdt</groupId>
        <artifactId>hdt-java-core</artifactId>
        <version>${hdt.version}</version>
      </dependency>
      <dependency>
        <groupId>com.blazegraph</groupId>
        <artifactId>bigdata-core</artifactId>
        <version>${blazegraph.version}</version>
      </dependency>

      <dependency> <!-- to get multisets -->
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>

      <dependency> <!-- to get Pair -->
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${apache.lang3.version}</version>
      </dependency>

      <dependency>
        <groupId>info.picocli</groupId>
        <artifactId>picocli</artifactId>
        <version>${picocli.version}</version>
      </dependency>

      <dependency> <!-- otherwise, CLI triggers an error: javax.xml.stream.FactoryConfigurationError: Provider com.bea.xml.stream.MXParserFactory not found" -->
        <groupId>stax</groupId>
        <artifactId>stax</artifactId>
        <version>${stax.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin> <!-- so junit 5 tests are properly run on GitHub -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven.surefire.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven.compiler.version}</version>
          <configuration>
            <release>${maven.compiler.release}</release>
            <source>${maven.compiler.source}</source>
            <target>${maven.compiler.target}</target>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <reporting>
    <plugins>
      <plugin> <!-- mvn javadoc:aggregate -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven.javadoc.plugin}</version>
        <configuration>
          <additionalOptions>
            <additionalOption>-Xdoclint:none</additionalOption>
          </additionalOptions>
        </configuration>
        <reportSets>
          <reportSet>
            <id>aggregate</id>
            <inherited>false</inherited>
            <reports>
              <report>aggregate</report>
            </reports>
          </reportSet>
          <reportSet>
            <id>default</id>
            <reports>
              <report>javadoc</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

</project>
